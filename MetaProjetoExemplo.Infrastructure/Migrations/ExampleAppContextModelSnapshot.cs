// <auto-generated />
using System;
using MetaProjetoExemplo.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MetaProjetoExemplo.Infrastructure.Migrations
{
    [DbContext(typeof(ExampleAppContext))]
    partial class ExampleAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MetaProjetoExemplo.Domain.Common.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionLogTypeId")
                        .HasColumnName("action_log_type_id");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("IpAddress")
                        .HasColumnName("ip_address");

                    b.Property<Guid?>("UserIdentifier")
                        .HasColumnName("user_identifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionLogTypeId");

                    b.HasIndex("Id");

                    b.ToTable("actions_logs","common");
                });

            modelBuilder.Entity("MetaProjetoExemplo.Domain.Common.ActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("actions_logs_types","common");

                    b.HasData(
                        new { Id = 1, Name = "USER_CREATED" },
                        new { Id = 2, Name = "USER_LOGIN_ATTEMPT" },
                        new { Id = 3, Name = "USER_LOGIN_FAIL" },
                        new { Id = 4, Name = "USER_LOGIN_SUCCESS" },
                        new { Id = 5, Name = "USER_CREATE_PROJECT" },
                        new { Id = 6, Name = "USER_FINALIZED_PROJECT" }
                    );
                });

            modelBuilder.Entity("MetaProjetoExemplo.Domain.Common.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email");

                    b.Property<Guid>("Identifier")
                        .HasColumnName("identifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("users","common");
                });

            modelBuilder.Entity("MetaProjetoExemplo.Domain.ProjectManagement.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnName("finish_date");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<int?>("ProjectManagerId")
                        .IsRequired()
                        .HasColumnName("project_manager_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagerId");

                    b.ToTable("projects","project_management");
                });

            modelBuilder.Entity("MetaProjetoExemplo.Domain.ProjectManagement.ProjectManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("UserIdentifier")
                        .HasColumnName("user_identifier");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("project_managers","project_management");
                });

            modelBuilder.Entity("MetaProjetoExemplo.Domain.Common.Action", b =>
                {
                    b.HasOne("MetaProjetoExemplo.Domain.Common.ActionType")
                        .WithMany()
                        .HasForeignKey("ActionLogTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MetaProjetoExemplo.Domain.ProjectManagement.Project", b =>
                {
                    b.HasOne("MetaProjetoExemplo.Domain.ProjectManagement.ProjectManager")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectManagerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
